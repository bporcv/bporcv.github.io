<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2Funcategorized%2F0.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Funcategorized%2F0.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[yum更换镜像源]]></title>
    <url>%2FLinux%2F3c238fc5.html</url>
    <content type="text"><![CDATA[CentOS 7更换国内镜像源阿里源备份1mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 更新下载新的CentOS-Base.repo 到/etc/yum.repos.d/ CentOS 61wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo 或者 1curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo CentOS 71wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 或者 1curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 生成缓存1yum makecache]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Cent OS</tag>
        <tag>yum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《软件安装入门到卸载系列》]]></title>
    <url>%2FLinux%2F6b1b7458.html</url>
    <content type="text"><![CDATA[Cent OS 7.xErlang安装yum更换镜像源]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Cent OS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Erlang的安装与卸载]]></title>
    <url>%2FLinux%2Fe03cc139.html</url>
    <content type="text"><![CDATA[CenOS 7.x准备工作erlang官网下载地址：https://www.erlang.org/downloads erlang solutions 地址：https://www.erlang-solutions.com/resources/download.html 安装wget工具 1yum install wget yum方式安装官方文档地址：https://www.erlang-solutions.com/resources/download.html 添加存储库条目12wget https://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpmrpm -Uvh erlang-solutions-1.0-1.noarch.rpm 如果在执行rpm -Uvh erlang-solutions-1.0-1.noarch.rpm的时候报错 执行以下命令,然后重新执行rpm -Uvh erlang-solutions-1.0-1.noarch.rpm 1yum install epel-release 安装Erlang1yum install erlang 验证安装结果1erl -version 安装成功界面如下图所示]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Cent OS</tag>
        <tag>Erlang</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VMWare安装CentOS7虚拟机]]></title>
    <url>%2FVMware%2F4a5e8db3.html</url>
    <content type="text"><![CDATA[VMware14安装CentOS7安装环境说明 Windows10 64位 VMware® Workstation 14 Pro CentOS-7-x86_64-Minimal-1611.iso 安装步骤 选择创建新的虚拟机 选择自定义创建虚拟机 选择Workstation14.x，点击下一步 选择安装程序光盘映像文件，然后点击下一步 选择虚拟机安装名称和位置 设置虚拟机处理器和内核数，机器性能好的可以往上选，这里用默认的就行，然后点击下一步 设置虚拟机内存，依旧视自己的电脑配置而定，这里使用默认推荐的内存1G，够用了，点击下一步 设置网络，这里使用默认的NAT网络制式就可以了，然后下一步 设置I/O控制器类型，这里使用默认的，点击下一步 设置磁盘类型，选择默认的，点击下一步 选择磁盘，使用默认的，选择下一步 指定磁盘容量，看需求和机器配置，这里使用20G就可以了，设置完后点击下一步 设置创建的虚拟机磁盘文件名，也就是虚拟机的打开文件，以后迁移，克隆用到的。 创建完成，点击完成，之后自动安装开启。 进入CentOS安装界面，选择安装CentOS,Install CentOS Linux 7这个选项，然后就开始安装了，鼠标出入Vmware使用Ctrl + Alt 进入语言选择界面，选择语言，依据需求选择，点击Continue 配置系统安装项，因为这里使用的是最小化安装，所以SOFRWARE SELECTION里面什么都没有，可以设置DATE &amp; TIME和KEYBOARD制式等，还有NETWORK &amp; HOSTNAME等。配置结束后点击Begin Installation 设置root用户密码和用户认证 这里建议设置root密码，然后可以使用root帐号登录，免去授权的麻烦，另外，如果密码较弱，按照提示点击两次Done即可。然后等待安装结束。 等待安装结束，重启，完成安装 输入帐号密码，如果能进入系统，恭喜你，安装成功了。]]></content>
      <categories>
        <category>VMware</category>
      </categories>
      <tags>
        <tag>VMWare</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RabbitMQ SpringCloud实战]]></title>
    <url>%2FRabbitMQ%2F1a80a0df.html</url>
    <content type="text"></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RabbitMQ SpringBoot实战]]></title>
    <url>%2FRabbitMQ%2F93e9b7c4.html</url>
    <content type="text"></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RabbitMQ_Java实战]]></title>
    <url>%2FRabbitMQ%2F617fec18.html</url>
    <content type="text"></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RabbitMQ简介与安装]]></title>
    <url>%2FRabbitMQ%2Fa4560bed.html</url>
    <content type="text"><![CDATA[RabbitMQ简介与安装简介安装WindowsCentOS 7在安装RabbitMQ之前，必须安装和RabbitMQ版本相匹配的Erlang/OTP。Erlang和RabbitMQ的对应关系可以看下面这个网址：https://www.rabbitmq.com/which-erlang.html 安装Erlang参考 Erlang安装 安装RabbitMQ 选择目录1cd /home 下载rabbitMQ1wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.18/rabbitmq-server-3.7.18-1.el7.noarch.rpm 安装1yum install rabbitmq-server-3.7.18-1.el7.noarch.rpm 设置开机启动1chkconfig rabbitmq-server on 启用Web管理插件查找rabbitmq-server的安装目录 1vi /usr/lib/systemd/system/rabbitmq-server.service 其中ExecStart和ExecStop就是命令行工具的目录，就是rabbitmq-sercer的命令目录，找到后进去目录 12cd /usr/sbin./rabbitmq-plugins enable rabbitmq_management 启用成功的标识 重启rabitmq服务1systemctl restart rabbitmq-server 关闭防火墙/开放端口15672关闭防火墙 1systemctl stop firewalld 开放端口 1firwall-cmd --zone=public --add-port=15672/tcp --permanent 添加用户进入rabbitmq命令目录，或者直接使用rabbimqctl全局命令 1cd /usr/sbin 执行添加用户命令，并授予administrator权限，可用于登录Web管理界面 123./rabbitmqctl add_user admin 123456./rabbitmqctl set_user_tags admin adminsitrator./rabbitmqctl list_users 登录Web界面，验证 #####]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《RabbitMQ学习笔记》]]></title>
    <url>%2FRabbitMQ%2Fe6c0ec84.html</url>
    <content type="text"><![CDATA[RabbitMQ学习笔记目录01_RabbitMQ简介与安装02_RabbitMQ_Java实战03_RabbitMQ_SpringBoot实战04_RabbitMQ_SpringCloud实战]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2Funcategorized%2F0.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[准备开发环境]]></title>
    <url>%2FSpringCloud%2F6d3e0eb2.html</url>
    <content type="text"><![CDATA[本教程的所有示例都统一使用以下环境配置 Windows 10IDEA 2018.2 UltmiateMaven 3.5.0Git 2.9.0SpringBoot 2.0.1SpringCloud Dalston.SR1 关于Maven的安装使用说明请参考博主的《Maven实战》系列的 下载与安装Maven 关于Git的安装使用说明请参考博主的《白话Git》 关于IDEA的使用说明请参考博主的《编程利器——IDEA》]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringCloud简介]]></title>
    <url>%2FSpringCloud%2F4dd766a2.html</url>
    <content type="text"></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《疯狂SpringCloud 微服务架构实战》学习笔记目录]]></title>
    <url>%2FSpringCloud%2F4dd766a2.html</url>
    <content type="text"><![CDATA[01_SpringCloud简介02_准备开发环境03_SpringCloud组件——Eureka04_SpringCloud组件——]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三分钟利用Github配合Hexo搭建博客]]></title>
    <url>%2FHexo%2F1092497b.html</url>
    <content type="text"><![CDATA[环境准备 操作系统：Windows 10 Git NodeJs Hexo 申请Github账号 第一步：安装Git由于是在Windows环境下进行环境的搭建，所以需要下载window版本的git，具体安装方式可以参看博主的文章：[Git简介与安装(/Git/a21830fd.html)，windows版本的git安装完成后自带git bash，一个非常好用的命令行工具，后续很多操作都会使用到这个，调出git bash的方法也很简单，鼠标右键就能看到，有一个命令是git bash here，点击后就能弹出一个小黑框框了，输入git version查看git版本，验证安装是否正确 第二步：安装NodeJs下载NodeJshexo依赖于nodejs，所以nodeJs是必须要下载的。下载地址：https://nodejs.org/zh-cn/download/，如果这个链接下载太慢了，可以去nodejs中文网下载，下载地址：http://nodejs.cn/download/ 依据自己的操作系统，自己的系统位数，是32位的还是64为的进行下载，LTS为长期支持版，Current为当前最新版，这里肯定下载LTS版本，写这篇博客的时候最新版本：12.11.1 下载完成后是一个msi文件，即为windows安装文件，双击文件进行安装，一路next。安装完毕后，按住win + R快捷键，输入cmd调出命令行窗口，输入node -v，结果如下图所示，即为安装成功 第三步：安装hexo安装hexo新建一个空的文件件，用于存放博客的所有东西，然后进入该文件夹，这些都是用window命令敲，建议使用管理员身份运行，不然可能会报错。可以鼠标右键开始菜单，然后点击命令提示符（管理员）A，通过盘符进入具体盘，然后通过cd命令进入具体目录，博主的目录为：T:\blog，所以执行以下命令即可： 12T:cd blog 进入目录之后执行以下命令，然后等待下载完毕即可，可能有些慢哦 1npm i -g hexo 安装完成后，查看版本： 1npm -v 初始化博客信息，通过执行hexo init命令，即可初始化我们的博客 生成目录解析 node_modules：依赖包目录 public：存放的是生成的页面 scaffolds：命令生成文章等的模板 source：用命令创建的各种文章 themes：主题 _config.yml：整个博客的配置 db.json：source解析所得到的 package.json：项目所需模块项目的配置信息 启动hexo博客运行以下命令启动hexo博客，默认端口是4000 1hexo server 访问hexo博客浏览器中输入：http://localhost:4000即可访问安装好的博客，默认效果如下图所示 hexo常用命令12345678$ hexo generate (hexo g) 生成静态文件$ hexo server (hexo s) 启动本地服务$ hexo deploy (hexo d) 提交到远程仓库$ hexo new page "xx"(hexo n page) 创建页面 $ hexo new "xx" (hexo n "") 创建文章$ hexo d -g 生成静态并提交到远程仓库$ hexo s -g 生成静态文件并启动本地预览$ hexo clean 清除本地 public 文件 第四步：申请github帐号申请帐号已经有账号的直接进入下一步，没有的通过访问github官方网址：https://github.com进行帐号注册。 创建仓库帐号注册完毕后，创建一个repo，名称为yourname.github.io, 其中yourname是你的github名称，一定要按照这个规则创建仓库，否则无效，相当于普通仓库，如下： 此处博主使用新建的test仓库做演示用 这里有两个地址，一个是 Https，一个是 SSH 。Https 每次提交都需要输入用户名和密码，SSH 只要添加了 SSH key 值，以后提交不需要输入用户名和密码。 再次强调 这里创建的仓库名称必须为 username.github.io，username 替换成你的 github 用户名，每个账户有且只有一个仓库用来存放网页静态文件，这里名称是固定的。当创建其他仓库的时候，仓库名称可以自定义。 github配置ssh key如果知道ssh key的配置或者已经配置过了就可以跳过这段，直接看下一段，执行以下命令. 生成ssh key1ssh-keygen -t rsa -C "你注册用的邮箱" 把&quot;你注册用的邮箱&quot;替换成你真实的邮箱，然后点击回车。接着会让你输入文件名，点击回车直接忽略，接着会让输入两次密码，点击两次回车，直接设置为空，不用输入密码 。 创建成功之后，通过如下命令拷贝 ssh key 的内容： 1clip &lt; ~/.ssh/id_rsa.pub github 添加ssh key进入添加界面 点击NEW SSH key添加，把之前拷贝的内容粘贴到key中，然后点击Add SSH key 添加成功后就可以看到自己添加的ssh key了 验证 如果验证已经添加成功了呢，在git bash中利用以下命令做测试，中间有一部要输入yes的哦 1ssh -T git@github.com 修改配置信息修改站点的配置文件_config.yml，该文件位于站点初始化的目录，博主这里是：T:\blog\_config.yml 修改deploy配置 注 ：如上图所示，找到 GitHub 上对应的远程仓库地址，点击右侧复制按钮，把 “git@github.com:username.github.io.git“ 替换成刚刚复制的远程仓库地址。 修改site等相关信息1234567title: Hexosubtitle:description:keywords:author: xxlanguage: zh-Hanstimezone: 注 ：网站名称（title），作者 (author)，语言 (language) 修改完成后可以重新启动hexo server，然后观察到对应的效果，如果满意，即可进行部署 部署生成静态文件1hexo g 提交到远程仓库下载插件： 1npm install hexo-deployer-git --save 插件安装完成后，就可以部署了，执行以下命令，即可部署到github上，在github上可以看见我们提交的静态文件了，就可以通过http://yourname.github.io访问我们的博客了，`yourname`改成你自己的用户名 1hexo d 如果你在运行上述命令是发生了如下错误 那么是因为没有配置git 的用户名和邮箱，执行以下命令配置一下就好了 12git config --global user.email "你的github邮箱"git confgi --global user.name "你的github用户名" 一定要用github的用户名，这样你的提交才会被统计到，配置完成后，重新部署一次 部署成功后我们去github看一下文件是否上去了（此处仓库名为test仅为演示用），如果上去了就访问一下博客地址：https://yourname.github.io(yourname请换成自己注册的github的用户名) 如果能访问就是搭建成功了，恭喜！]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git配置文件详解]]></title>
    <url>%2FGit%2F85076309.html</url>
    <content type="text"><![CDATA[工欲善其事必先利其器 这章呢，讲解下Git的配置，通过这些配置，我们能更好的使用好Git这个神兵利器。 配置的作用域在Git的配置哲学中，配置的作用域分为三种：系统级别（system），全局级别(global)，仓库级别(local)。 系统级别 定义 什么是系统级别的配置呢，系统级别的配置就是上面所说的针对系统下的所有用户的所有仓库使用同一种配置文件。其约束范围是系统中所有用户的所有仓库 作用域 系统中的所有用户的所有仓库 配置文件位置 windows: Linux：/etc/gitconfig 全局级别 作用域：当前登录用户的所有仓库 仓库级别 作用域：具体配置的仓库 基础配置项]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《编程利器——IDEA》]]></title>
    <url>%2FIDEA%2Fa44a05a2.html</url>
    <content type="text"><![CDATA[工欲善其事必先利其器 IDEA作为当前最流行的版本控制工具，以其分布式，独特的分支管理方式闻名于众多开发者心中，是目前主流的版本管理工具，我们所熟知的全球闻名的同性交友社区Github就是依赖Git而打造的。依赖Git的设计哲学，也衍生出了很多好用的工具，如Github，Gitlab，码云等代码托管平台，也造就了SourceTree，Git客户端等强大的图形化界面，但是真正的高手都是通过黑窗口和命令来提现出自己的不凡，同样这也是客户端所不能带来的高度自由的用户体验。本系列将以白话文的形式来对Git设计哲学进行解读，对其原来的概念，理论，命令，配合以实战的方式来进行说明，分为以下几章，循序渐进，由浅入深，一一道来。 01_IDEA简介与安装02_Git简介与安装]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TODO]]></title>
    <url>%2FPlan%2F6c9b5b14.html</url>
    <content type="text"><![CDATA[TODO1 TODO2]]></content>
      <categories>
        <category>Plan</category>
      </categories>
      <tags>
        <tag>Plan</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《ElasticSearch笔记》]]></title>
    <url>%2FElasticSearch%2Fa8882e14.html</url>
    <content type="text"><![CDATA[目录ElasticSearch核心知识01_什么是ElasticSearch02_ElasticSearch的03_Java中的数据类型 ElasticSearch运维优化ELK]]></content>
      <categories>
        <category>ElasticSearch</category>
      </categories>
      <tags>
        <tag>ElasticSearch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《白话Git》]]></title>
    <url>%2FGit%2Fa44a05a2.html</url>
    <content type="text"><![CDATA[工欲善其事必先利其器 Git作为当前最流行的版本控制工具，以其分布式，独特的分支管理方式闻名于众多开发者心中，是目前主流的版本管理工具，我们所熟知的全球闻名的同性交友社区Github就是依赖Git而打造的。依赖Git的设计哲学，也衍生出了很多好用的工具，如Github，Gitlab，码云等代码托管平台，也造就了SourceTree，Git客户端等强大的图形化界面，但是真正的高手都是通过黑窗口和命令来提现出自己的不凡，同样这也是客户端所不能带来的高度自由的用户体验。本系列将以白话文的形式来对Git设计哲学进行解读，对其原来的概念，理论，命令，配合以实战的方式来进行说明，分为以下几章，循序渐进，由浅入深，一一道来。 Git简介与安装Git配置文件解析]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git简介与安装]]></title>
    <url>%2FGit%2Fa21830fd.html</url>
    <content type="text"><![CDATA[工欲善其事必先利其器 说到软件的安装，作为程序员，简单点分，就三平台：Windows，Linux平台，Mac平台，关于Git的安装，其官方文档写的很清楚了。地址是:https://git-scm.com/book/zh/v2/起步-安装-Git， 笔者这里主要是是用Windows进行开发，而且Windows版本的git提供的Bash也是很强大的,这里就对windows版本下进行的安装进行一个图解说明，至于Linux和Mac平台的，可以参照官方文档进行安装。 开发环境及软件版本 Windows 10 Git 2.21.0(点击可下载) 安装步骤 步骤一点击安装程序，进入安装界面，点击Next，进入下一步安装 步骤二选择软件安装路径，选择完后，点击Next，进入下一步安装 步骤三选择配置信息，这里选用默认的配置信息就行了,然后点击Next，进入下一步安装 步骤四选择git使用的编辑器，这个编辑器应该主要是针对git diff和git merge的，这里就先用系统默认的Vim就好了，后续会使用更方便的可视化图形界面工具。然后点击Next，进入下一步安装 步骤五Git环境变量的设置，这里使用默认的就好，会添加到系统的环境变量中，在windows中就是用过cmd命令行窗口或者GitBash都能够运行Git命令。然后点击Next，进入下一步安装 步骤六选用SSH，这里选用系统默认的就好了。然后点击Next，进入下一步安装 步骤七选用SSL，这里选用系统默认的就好了。然后点击Next，进入下一步安装 步骤八设置换行符约定，这里我们使用Git推荐的规则，针对Windows系统的，Git会在拉取代码的时候进行换行符的转换，转换为Windows系统的换行符，在提交代码的时候也会做一层转换，转换为试用Linux系统的换行符。然后点击Next，进入下一步安装 步骤九设置Git的终端类型，这里同样选择系统默认的，系统默认的终端功能很强大，而且色彩分明哦，这里就不需要试用windows的黑窗口了。然后点击Next，进入下一步安装 步骤十配置Git的其他额外配置项，这里使用系统默认的配置想就可以了。然后点击Next，进入下一步安装 步骤十一点击Next后会进入Git安装界面，这个时候等待安装就行了。 步骤十二安装完毕，点击鼠标右键就可以看到Git相关的东西了，会多出两个：Git GUI Here和Git Bash Here两个菜单项，常用的就是Git Bash Here了 总结 Git在Windows上的安装依旧和其他软件的安装没有任何区别，完全可以傻瓜式无脑点击下一步，之所以能够这么做的原因，就是我们即便安装完成了，也可以有足够的自由来更改之前的选项来满足自己的喜好。 下一章我们来讲解：Git的配置详解]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写作计划]]></title>
    <url>%2Funcategorized%2F89edd5a9.html</url>
    <content type="text"><![CDATA[我的写作计划咯，输入密码，查看文章 Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>计划</tag>
      </tags>
  </entry>
</search>
